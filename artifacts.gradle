/*
 * Copyright 2020, {{App}}
 * Licensed under the Apache License, Version 2.0, "{{App}} Inc".
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {

    defaultConfig {
        applicationId names.applicationId
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode names.versionCode
        versionName names.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "PACKAGE_NAME", "\"com.app\"")
        vectorDrawables.useSupportLibrary true
        multiDexEnabled = true
        useLibrary 'org.apache.http.legacy'
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def project = "App"
            def SEP = "_"
            // def flavor = variant.productFlavors[0].name
            def version = variant.versionName
            def date = new Date()
            def formattedDate = date.format('ddMMyy_HHmm')
            def newApkName = project + SEP + version + SEP + formattedDate + ".apk"
            outputFileName = new File(newApkName)
        }
    }

    /**
     * resolve and fix conflicting dependencies
     */
    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
            preferProjectModules()
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            versionNameSuffix '.' + getVersionName()
            /*buildConfigField("String[]", "builds", getBuilds())*/
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/notice'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license'
        exclude 'META-INF/license.txt'
    }
}
